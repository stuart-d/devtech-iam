AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates an role to be used by a pipeline to deploy services'


Resources:
  IamExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
  #      RoleName: ExecutionRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                AWS: 
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:user/rekognition'
              Action: 
                - "sts:AssumeRole"
        Path: /
        Tags:
          - Key: AppId
            Value: App1
        ManagedPolicyArns: 
          - !Ref EnableS3Policy     
          - !Ref EnableCloudFormationPolicy   

   

  EnableCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Description: "Permissions to enable access to S3"
    Properties:
       # ManagedPolicyName: 
       Path: /
       PolicyDocument: 
         Version: '2012-10-17'
         Statement:
             - Sid: EnableCloudFormation
               Effect: Allow
               Action: 
                 - "cloudformation:*"
               Resource: "*"
        #       Condition:
        #          StringEquals:
        #            aws:RequestTag/AppId: "${aws:PrincipalTag/AppId}"

  # 21-05-2020 
  # S3 doesn't support tag based authorisation on buckets, only objects. So for buckets we use the bucket name.
  # Buckets can only be lowercase names so putting the condition on the resource means that the tag value must be lowercase.
  # Can't figure out how to string match the backet name
  EnableS3Policy:
    Type: AWS::IAM::ManagedPolicy
    Description: "Permissions to enable access to S3 1"
    Properties:
       # ManagedPolicyName: 
       Path: /
       PolicyDocument: 
         Version: '2012-10-17'
         Statement:
             - Sid: EnableS3with
               Effect: Allow
               Action: 
                 - "s3:createbucket"
                 - "s3:deletebucket"
               Resource:
                - "arn:aws:s3:::${aws:PrincipalTag/AppId}*"

Version: '2012-10-17'
Statement:
    - 
        Sid: CreateEc2InstanceWithCorrectTags
        Action:
            - 'ec2:GetConsoleOutput'
            - 'ec2:GetConsoleScreenshot'
            - 'ec2:RunInstances'
        Effect: Allow
        Resource: 'arn:aws:ec2:*:*:instance/*'
        Condition:
            StringEquals:
                'aws:RequestTag/${TagKey}': '${aws:PrinciplayTag/${TagKey}'

             
     
